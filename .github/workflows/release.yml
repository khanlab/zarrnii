name: Release

on:
  push:
    tags:
      - "v*"
  release:
    types: [published]

env:
  FORCE_COLOR: "1"
  
permissions:
  contents: write
  id-token: write  # For trusted publishing to PyPI

jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for setuptools-scm

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "0.8.17"

    - name: Install dependencies
      run: uv sync --dev

    - name: Build package
      run: uv build

    - name: Upload distributions
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish:
    name: Publish to PyPI
    if: startsWith(github.ref, 'refs/tags/')
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/zarrnii
    
    steps:
    - name: Download distributions
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: Create GitHub Release
    needs:
    - publish
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download distributions
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Sign distributions with Sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.0
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl

    - name: Create GitHub Release (if not exists)
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        if gh release view "${{ github.ref_name }}" --repo "${{ github.repository }}"; then
          echo "Release '${{ github.ref_name }}' already exists, skipping creation."
        else
          gh release create "${{ github.ref_name }}" --repo "${{ github.repository }}" --notes ""
        fi

    
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release upload
        '${{ github.ref_name }}' dist/**
        --repo '${{ github.repository }}'

