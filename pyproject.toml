[project]
name = "zarrnii"
dynamic = ["version"]
description = "Package for working with OME-Zarr and NIFTI images in a unified manner, with a focus on spatial transformations"
authors = [{name = "Ali Khan", email = "alik@robarts.ca"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"
keywords = ["neuroimaging", "ome-zarr", "nifti", "biomedical", "imaging", "microscopy", "mri"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research", 
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Scientific/Engineering :: Image Processing",
]


dependencies = [
    "zarr>=3.0.8",
    "nibabel>=5.2.0",
    "dask>=2025.5.1",
    "numpy>=1.26.4",
    "scipy>=1.12.0",
    "pandas>=2.2.0",
    "ngff-zarr[all]>=0.13.1",
    "scikit-image>=0.22.0",
    "h5py>=3.14.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.2.0",
    "pytest-cov>=6.0.0",
    "pre-commit>=4.0.0",
    "jupyterlab>=4.2.1",
    "matplotlib>=3.9.0",
    "bokeh>=3.4.1",
    "flake8>=7.3.0",
    "flake8-docstrings>=1.7.0",
    "flake8-bugbear>=24.12.12",
    "flake8-import-order>=0.18.2",
    "black>=24.10.0",
    "isort>=5.13.2",
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.5.50",
    "mkdocstrings>=0.27.0",
    "mkdocstrings-python>=1.13.0",
]

imaris = [
    "h5py>=3.8.0",
]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project.scripts]
# No CLI scripts currently

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "zarrnii/_version.py"

[tool.hatch.build.targets.wheel]
packages = ["zarrnii"]

[project.urls]
Homepage = "https://github.com/khanlab/zarrnii"
Documentation = "https://www.khanlab.ca/zarrnii"
Repository = "https://github.com/khanlab/zarrnii"
Issues = "https://github.com/khanlab/zarrnii/issues"


[tool.flake8]
max-line-length = 88  # Matches Black's default line length
extend-ignore = ["E203", "W503"]  # Compatibility with Black
docstring-convention = "google"  # Enforces Google-style docstrings
exclude = ["tests/*", ".venv", "build", "dist"]

[tool.black]
line-length = 88
target-version = ['py39']  # Set to your target Python version

[tool.isort]
profile = "black"  # Ensure compatibility with Black
line_length = 88
skip_glob = ["zarrnii/_version.py"]

[tool.coverage.run]
source = ["zarrnii"]
omit = ["*/_version.py", "*/__pycache__/*", "*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

[dependency-groups]
dev = [
    "pytest>=8.2.0",
    "pytest-cov>=6.0.0", 
    "pre-commit>=4.0.0",
    "jupyterlab>=4.2.1",
    "matplotlib>=3.9.0",
    "bokeh>=3.4.1",
    "black>=25.1.0",
    "flake8>=7.3.0",
    "flake8-docstrings>=1.7.0",
    "flake8-bugbear>=24.12.12",
    "flake8-import-order>=0.18.2",
    "isort>=6.0.1",
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.19",
    "mkdocstrings>=0.30.0",
    "mkdocstrings-python>=1.18.2",
]

